import gspread
from oauth2client.service_account import ServiceAccountCredentials
import smtplib
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
import os
from datetime import datetime, timedelta
import time

# Google Sheets setup
scope = ["https://spreadsheets.google.com/feeds", "https://www.googleapis.com/auth/drive"]
credentials = ServiceAccountCredentials.from_json_keyfile_name("credentials.json", scope)
client = gspread.authorize(credentials)

sheet = client.open_by_url("https://docs.google.com/spreadsheets/d/1N7YEZvtaJkKY8z8GjZn9gTDwFL1-f0xP1iwAVWo1OBQ/edit?usp=sharing")
contract_sheet = sheet.worksheet("Contract")
usermail_sheet = sheet.worksheet("USERMAIL")

rows = contract_sheet.get_all_records()  # ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á Contract
emails = usermail_sheet.col_values(1)[1:]  # ‡∏î‡∏∂‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå A ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ú‡πà‡∏ô‡∏á‡∏≤‡∏ô USERMAIL (‡∏Ç‡πâ‡∏≤‡∏° header)

# Email Config (‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å GitHub Secrets)
SMTP_USER = os.environ["SMTP_USER"]
SMTP_PASS = os.environ["SMTP_PASS"]
SMTP_HOST = "smtp.gmail.com"
SMTP_PORT = 587

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•
def send_email(to, subject, message):
    msg = MIMEMultipart()
    msg["From"] = "‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏£‡∏∞‡∏ö‡∏ö <noreply@example.com>"  # ‡πÅ‡∏™‡∏î‡∏á‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô
    msg["To"] = to
    msg["Subject"] = subject
    msg.attach(MIMEText(message, "plain"))

    with smtplib.SMTP(SMTP_HOST, SMTP_PORT) as server:
        server.starttls()
        server.login(SMTP_USER, SMTP_PASS)
        server.sendmail(SMTP_USER, to, msg.as_string())

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡πà‡∏≤ DaysRemaining ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
def check_and_send_notifications():
    now = datetime.now()
    for row in rows:
        try:
            days_remaining = int(row.get("DaysRemaining", 999))  # ‡πÉ‡∏ä‡πâ DaysRemaining ‡∏à‡∏≤‡∏Å‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        except:
            continue

        if days_remaining in [5, 3, 1, 0]:  # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡πà‡∏≤ DaysRemaining ‡πÄ‡∏õ‡πá‡∏ô 5, 3, 1 ‡∏´‡∏£‡∏∑‡∏≠ 0
            contract_id = row["ContractID"]
            disname = row["DISNAME"]
            start_date = row["Starting-date"]
            end_date = row["Ending-date"]
            pdf = row["PDFfile"]

            subject = f"‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤ {contract_id} ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏≠‡∏µ‡∏Å {days_remaining} ‡∏ß‡∏±‡∏ô"
            body = f"""‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•,

‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà {contract_id} ‡∏Ç‡∏≠‡∏á {disname} ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å {days_remaining} ‡∏ß‡∏±‡∏ô

üìÖ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: {start_date}
üìÖ ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î: {end_date}
üìÑ ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡πÅ‡∏ô‡∏ö: {pdf}

‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏´‡∏£‡∏∑‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ï‡∏≤‡∏°‡∏£‡∏∞‡∏ö‡∏ö

‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö/‡∏Ñ‡πà‡∏∞
‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏±‡∏ç‡∏ç‡∏≤"""

            # ‡∏™‡πà‡∏á‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
            for email in emails:
                send_email(email, subject, body)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà 7 ‡πÇ‡∏°‡∏á‡πÄ‡∏ä‡πâ‡∏≤
def wait_until_seven_am():
    now = datetime.now()
    target_time = now.replace(hour=7, minute=0, second=0, microsecond=0)
    if now > target_time:
        target_time += timedelta(days=1)
    wait_time = (target_time - now).seconds
    time.sleep(wait_time)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏£‡∏±‡∏ô‡∏ó‡∏∏‡∏Å 4 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
def run_every_4_hours():
    while True:
        # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤ 7 ‡πÇ‡∏°‡∏á‡πÄ‡∏ä‡πâ‡∏≤
        wait_until_seven_am()

        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        check_and_send_notifications()

        # ‡∏£‡∏≠ 4 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á‡∏Å‡πà‡∏≠‡∏ô‡∏à‡∏∞‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á
        time.sleep(4 * 3600)

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
if __name__ == "__main__":
    run_every_4_hours()
